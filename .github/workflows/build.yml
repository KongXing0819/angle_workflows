name: Build ANGLE for Android

on:
  workflow_dispatch:  # 手动触发
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release
      android_api:
        description: 'Android API level'
        required: true
        default: '33'
        type: string
      target_arch:
        description: 'Target architecture'
        required: true
        default: 'arm64'
        type: choice
        options:
        - arm64
        - arm
        - x86
        - x64
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  ANDROID_API_LEVEL: '33'
  ANDROID_NDK_VERSION: '25.1.8937393'

jobs:
  build-android:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Checkout ANGLE
      run: |
        if [ ! -d "angle" ]; then
          git clone https://chromium.googlesource.com/angle/angle
        fi
        cd angle
        git fetch --all
        git checkout main
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          cmake \
          ninja-build \
          openjdk-17-jdk \
          pkg-config \
          libx11-dev \
          libxcomposite-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxi-dev \
          libnss3-dev \
          libatk-bridge2.0-dev
        
    - name: Setup Android SDK and NDK
      uses: android-actions/setup-android@v3
      
    - name: Install specific NDK version
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;$ANDROID_NDK_VERSION"
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$ANDROID_NDK_VERSION" >> $GITHUB_ENV
        echo "ANDROID_NDK=$ANDROID_HOME/ndk/$ANDROID_NDK_VERSION" >> $GITHUB_ENV
        
    - name: Bootstrap ANGLE
      run: |
        cd angle
        python scripts/bootstrap.py
        
    - name: Sync ANGLE dependencies
      run: |
        cd angle
        gclient sync
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
        
    - name: Configure build environment
      run: |
        cd angle
        # 设置环境变量
        echo "ANGLE_BUILD_TYPE=${{ github.event.inputs.build_type || 'Release' }}" >> $GITHUB_ENV
        echo "TARGET_ARCH=${{ github.event.inputs.target_arch || 'arm64' }}" >> $GITHUB_ENV
        echo "ANDROID_API=${{ github.event.inputs.android_api || '33' }}" >> $GITHUB_ENV
        
    - name: Generate build files
      run: |
        cd angle
        gn gen out/Android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }} \
          --args=" \
          target_os=\"android\" \
          is_debug=${{ env.ANGLE_BUILD_TYPE == 'Debug' && 'true' || 'false' }} \
          is_component_build=false \
          is_clang=true \
          use_custom_libcxx=false \
          target_cpu=\"${{ env.TARGET_ARCH }}\" \
          android32_ndk_api_level=${{ env.ANDROID_API }} \
          android64_ndk_api_level=${{ env.ANDROID_API }} \
          "
          
    - name: Build ANGLE
      run: |
        cd angle
        ninja -C out/Android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }} libGLESv2
        
    - name: List build artifacts
      run: |
        cd angle/out/Android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }}
        find . -name "*.so" -o -name "*.a" | head -20
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: angle-android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }}
        path: |
          angle/out/Android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }}/obj/third_party/angle/libGLESv2.so
          angle/out/Android-${{ env.TARGET_ARCH }}-${{ env.ANGLE_BUILD_TYPE }}/libGLESv2.so
        retention-days: 30
        
    - name: Create build summary
      run: |
        echo "## ANGLE Android Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ env.ANGLE_BUILD_TYPE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Target Architecture**: ${{ env.TARGET_ARCH }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Android API Level**: ${{ env.ANDROID_API }}" >> $GITHUB_STEP_SUMMARY
        echo "- **NDK Version**: ${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Build completed successfully! 🎉" >> $GITHUB_STEP_SUMMARY

  multi-arch-build:
    needs: build-android
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [arm64, arm, x86, x64]
    
    steps:
    - name: Checkout ANGLE
      run: |
        git clone https://chromium.googlesource.com/angle/angle
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build openjdk-17-jdk
        
    - name: Setup Android
      uses: android-actions/setup-android@v3
      
    - name: Bootstrap and sync
      run: |
        cd angle
        python scripts/bootstrap.py
        gclient sync
        
    - name: Build for ${{ matrix.arch }}
      run: |
        cd angle
        gn gen out/Android-${{ matrix.arch }} \
          --args=" \
          target_os=\"android\" \
          is_debug=false \
          is_component_build=false \
          target_cpu=\"${{ matrix.arch }}\" \
          android32_ndk_api_level=33 \
          android64_ndk_api_level=33 \
          "
        ninja -C out/Android-${{ matrix.arch }} libGLESv2
        
    - name: Upload ${{ matrix.arch }} artifacts
      uses: actions/upload-artifact@v4
      with:
        name: angle-android-${{ matrix.arch }}
        path: angle/out/Android-${{ matrix.arch }}/*.so
        retention-days: 30